[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=2",
]

[project]
name = "dlsite-recommendation-llm"
version = "0.0.0"
description = "Recommend DLSite voice works with LLM"
readme = "README.md"
keywords = [
  "dlsite",
  "llm",
]
license = { text = "MIT" }
authors = [
  { name = "eggplants", email = "w10776e8w@yahoo.co.jp" },
]
requires-python = ">=3.10,<4"
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "langchain>=0.3.14,<0.4",
  "langchain-community>=0.3.14,<0.4",
  "langchain-openai>=0.3,<0.4",
  "pinecone-client>=5.0.1,<6",
  "python-dotenv>=1.0.1,<2",
  "streamlit>=1.41.1,<2",
]
urls.Repository = "https://github.com/eggplants/dlsite-recommendation-llm"
scripts.drl = "dlsite_recommendation_llm.cli:main"

[tool.poetry]
requires-poetry = ">=2.0"
packages = [
  { include = "dlsite_recommendation_llm" },
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.1.1"
pre-commit = ">=2.20,<5.0"
taskipy = "^1.10.3"
pytest = "^8.0.0"
pytest-cov = ">=4.1,<7.0"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0"

[tool.black]
line-length = 120
target-version = [
  'py310',
]

[tool.ruff]
line-length = 120

lint.select = [
  "ALL",
]
lint.ignore = [
  "D",
  "D203",
  "D213",
]
lint.per-file-ignores."scripts/*.py" = [
  "D",
  "INP001", #  Add an `__init__.py`.
]
lint.per-file-ignores."tests/test_*.py" = [
  "INP001", #  Add an `__init__.py`.
  "S101",   #    Use of assert detected
]
lint.mccabe.max-complexity = 18
lint.pydocstyle.convention = "numpy"

[tool.mypy]
pretty = true
python_version = "3.10"
show_error_codes = true
strict = true

[tool.taskipy.tasks]
dev = "streamlit run dlsite_recommendation_llm/main.py"
start = "task test --global.developmentMode=false"
test = "pytest --cov=dlsite_recommendation_llm --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
